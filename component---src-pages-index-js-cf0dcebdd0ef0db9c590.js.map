{"version":3,"file":"component---src-pages-index-js-cf0dcebdd0ef0db9c590.js","mappings":"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","sources":["webpack://historic-england-heritage-standards/./src/components/structure/bgImage.js","webpack://historic-england-heritage-standards/./src/components/structure/frontpage-intro.js","webpack://historic-england-heritage-standards/./src/components/structure/post-card-front.js","webpack://historic-england-heritage-standards/./src/components/structure/blog-front-page.js","webpack://historic-england-heritage-standards/./node_modules/@restart/ui/esm/Button.js","webpack://historic-england-heritage-standards/./node_modules/react-bootstrap/esm/Button.js","webpack://historic-england-heritage-standards/./src/components/callsToAction/join-fish.js","webpack://historic-england-heritage-standards/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst BackgroundImage = styled(GatsbyImage)`\n  height: 65vh;\n  width: 100%;\n  background-size: cover;\n    background-position: top center;\n  background-attachment: fixed;\n`\nexport default function Hero() {\n    const imagedata = useStaticQuery(graphql`\n        query BackgroundImageQuery {\n            file(relativePath: { eq: \"Stonehenge.jpg\" }) {\n                childImageSharp {\n                    gatsbyImageData(\n                        layout: FULL_WIDTH\n                        quality: 80\n                        backgroundColor: \"black\"\n                        jpgOptions: {quality: 80}\n                        transformOptions: {duotone: {\n                            highlight: \"#ffffff\"\n                            shadow: \"#222222\"\n                            opacity: 80\n                        }}\n                    )\n                }\n            }\n        }\n    `)\n    return(\n            <BackgroundImage\n                className=\"background-image\"\n                image={imagedata.file.childImageSharp.gatsbyImageData}\n                alt={'Silbury Hill'}\n            />\n    )\n}\n","import React from \"react\";\nimport {useStaticQuery, graphql} from \"gatsby\";\nimport {Container, Row} from \"react-bootstrap\";\nimport Hero from \"./bgImage\";\nconst query = graphql`\n    query {\n        allMarkdownRemark(\n            sort: {frontmatter: {date: ASC}}\n            filter: {frontmatter: {permalink: {eq: \"/about/\"}}}\n        ) {\n            nodes {\n                id\n                html\n                frontmatter {\n                    permalink\n                    date(formatString: \"MMMM DD, YYYY\")\n                    author\n                }\n            }\n        }\n    }\n`;\nconst AboutText = () => {\n    const data = useStaticQuery(query);\n    const content = data.allMarkdownRemark.nodes[0].html;\n    return (\n        <>\n        <Hero/>\n        <Container fluid className={'text-bg-light my-4'} >\n\n            <Container className={'my-4'}>\n                <Row className={\"post-body my-4 \"}>\n\n                    <div className=\"px-4 my-4\">\n                        <h1 className=\"ml-4 mt-4 text-center display-3\">\n                            Forum for Information Standards in Heritage\n                        </h1>\n                    </div>\n                    <div className=\"bg-white text-black mb-4 p-4 rounded-2\"\n                         dangerouslySetInnerHTML={{__html: content}}/>\n\n                </Row>\n            </Container>\n\n        </Container>\n        </>\n            );\n};\n\nexport default AboutText;","import React from \"react\";\nimport {Col} from \"react-bootstrap\";\nimport {Link} from \"gatsby\";\n\nconst PostCardFront = ({post}) => (\n            <Col md={4} className={'text-bg-dark'}>\n                    <Link to={post.frontmatter.permalink} >\n                        <h1 className=\"lead text-white fw-bold mb-3 mt-0\">{post.frontmatter.title}</h1></Link>\n                        <h2\n                            className=\"text-white small\">{post.frontmatter.date}\n                        </h2>\n                        <p className={\"text-white\"}>{post.excerpt}</p>\n\n            </Col>\n);\n\nexport default PostCardFront;","import React from 'react';\nimport {graphql, useStaticQuery} from 'gatsby';\nimport PostCardFront from \"./post-card-front\";\nimport {Col, Container, Row} from 'react-bootstrap';\n\nconst query = graphql`\n    {\n        allMarkdownRemark(\n            sort: {frontmatter: {date: DESC}}\n            limit: 3\n            filter: {frontmatter: {type: {eq: \"post\"}}}\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        permalink\n                        title\n                        id\n                        date(formatString: \"MMMM DD, YYYY\")\n                    }\n                    id\n                    excerpt\n                }\n            }\n        }\n    }\n`;\n\nconst LatestPosts = () => {\n    const data = useStaticQuery(query);\n    const posts = data.allMarkdownRemark.edges;\n    return (\n        <Container>\n            <h2 className={'display-3 text-center display-6'}>Latest news and events</h2>\n            <Col md={12} className={'text-center'}>\n                <Row className={\"my-4 bg-white\"}>\n                    {posts.map(({node}) => (\n                        <PostCardFront key={node.id} post={node}/>\n                    ))}\n                </Row>\n            </Col>\n        </Container>\n    );\n};\nexport default LatestPosts;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport {Link} from \"gatsby\";\n\nconst JoinUsButton = () => {\n    return (\n        <Link to={'become-a-fish-member'}>\n            <Button variant=\"outline-dark\" size=\"lg\" className={'my-2'}>\n                Become a member of FISH\n            </Button>\n        </Link>\n    );\n};\n\nexport default JoinUsButton;","import * as React from 'react';\nimport Layout from '../components/layout';\nimport AboutText from '../components/structure/frontpage-intro';\nimport LatestPosts from '../components/structure/blog-front-page';\nimport JoinUsButton from \"../components/callsToAction/join-fish\";\nimport {Container, Row} from \"react-bootstrap\";\nimport Seo from \"../components/structure/seo\";\nconst IndexPage = () => {\n\n\n    return (\n        <Layout>\n\n                <AboutText/>\n                <Container className={'text-center'}>\n                    <Row className=\"justify-content-center mb-2\">\n                        <JoinUsButton/>\n                    </Row>\n                </Container>\n\n            <Container fluid className={'text-bg-dark mb-4 py-4'}>\n            <LatestPosts/>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => (\n    <Seo title={'Forum on Information Standards in Heritage'} description={\"The FISH website\"} />\n)"],"names":["BackgroundImage","styled","GatsbyImage","Hero","imagedata","useStaticQuery","className","image","file","childImageSharp","gatsbyImageData","alt","content","allMarkdownRemark","nodes","html","Container","fluid","Row","dangerouslySetInnerHTML","__html","post","Col","md","Link","to","frontmatter","permalink","title","date","excerpt","posts","edges","map","node","key","id","_excluded","useButtonProps","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","Button","_ref","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","size","active","prefix","Head","description"],"sourceRoot":""}